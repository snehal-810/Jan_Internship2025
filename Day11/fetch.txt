What is fetch() in JavaScript?
-------------------------------------------------
fetch in JavaScript is a built-in function used to make HTTP requests, typically to fetch data from a server. It is a modern alternative to older methods like XMLHttpRequest. The fetch API returns a promise, making it easier to work with asynchronous code compared to traditional callback functions.

Basic Syntax
---------------------------------------------------
fetch(url, options)
  .then(response => response.json())  // Processing the response
  .then(data => console.log(data))     // Handling the data
  .catch(error => console.error('Error:', error));  // Handling errors

-> url: The URL to which the request is sent.
-> options: (optional) An object where you can specify HTTP method (GET, POST, etc.), headers, body data, and other settings.
-> .then(): Handles the response once the promise is resolved. You can use .json() to parse the response as JSON.
-> .catch(): Catches any errors that occur during the fetch process.

Example
--------------------------------------------------------
fetch('https://api.example.com/data')  // Sending GET request to the URL
  .then(response => response.json())  // Parsing response as JSON
  .then(data => console.log(data))    // Logging the fetched data
  .catch(error => console.log('Error:', error));  // Catching errors


In this example:

-> The fetch function sends a GET request to https://api.example.com/data.
-> Once the data is received, .json() is used to convert the response into a JavaScript object.
-> The data is logged, or any errors are handled with .catch().


The power of fetch lies in its use of promises, allowing you to handle asynchronous operations more easily.